@use 'sb/reset';
@use 'sb/sb';

@include sb.all;

/* Vars */

// Note: CSS variables can't be used for media queries.
$breakpoint-xs: 320px;
$breakpoint-sm: 600px;
$breakpoint-md: 960px;
$breakpoint-lg: 1024px;
$bord: 1px solid var(--c-bord);
$pad-body: 1rem;

%vars-misc {
  --max-page-width:     #{$breakpoint-lg};
  --font-size-h1:       1.6rem;
  --font-size-h2:       1.4rem;
  --font-size-h3:       1.2rem;
  --border-radius:      4px;
  --thick-border-width: 3px;
  --img-box-size:       10em;
  --img-box-size-small: 6em;
  --c-bord:             var(--c-fg-far);
}

// Source: https://brandcolors.net.
%vars-brand-colors {
  --c-skype:    #00aff0;
  --c-github:   #4183c4;
  --c-youtube:  #ff0000;
  --c-twitter:  #55acee;
  --c-linkedin: #0976b4;
  --c-facebook: #3b5998;
  --c-feedly:   #2bb24c;
  --c-discord:  #7289da;
  --c-rss:      #f26522;
}

// Defined as mixin, rather than pseudo-class, for compatibility with `@media`.
@mixin color-scheme-dark {
  --c-bg:             hsl(200deg 5% 10%);
  --c-fg:             hsl(0deg 0% 90%);
  --c-bg-far:         darkslategray;
  --c-bg-near:        hsl(0deg 0% 15%);
  --c-fg-far:         hsl(0deg 0% 40%);
  --c-fg-near:        hsl(0deg 0% 70%);
  --c-red:            hsl(0deg 70% 50%);
  --c-blue:           hsl(207deg 100% 70%);
  --c-link:           hsl(230deg 70% 80%);
  --c-link-visited:   hsl(260deg 45% 65%);
  --c-code-bg:        hsl(70deg 8% 15%); // Same as chroma's Monokai background
  --c-hr:             hsl(0deg 0% 63%);
  --c-fg-tag:         var(--c-fg);
  --c-bg-tag:         hsl(220deg 20% 20%);
  --c-bg-tag-active:  hsl(220deg 30% 25%);
  --c-bg-tag-checked: hsl(150deg 30% 25%);
}

// Defined as mixin, rather than pseudo-class, for compatibility with `@media`.
@mixin color-scheme-light {
  --c-bg:             white;
  --c-fg:             black;
  --c-bg-far:         hsl(0deg 0% 46%);
  --c-bg-near:        aliceblue;
  --c-fg-far:         hsl(0deg 0% 70%);
  --c-fg-near:        hsl(0deg 0% 40%);
  --c-red:            hsl(0deg 100% 60%);
  --c-blue:           hsl(207deg 100% 42%);
  --c-link:           hsl(231deg 40% 40%);
  --c-link-visited:   hsl(260deg 60% 25%);
  --c-code-bg:        hsl(60deg 33% 97%);
  --c-hr:             hsl(0deg 0% 63%);
  --c-fg-tag:         var(--c-fg);
  --c-bg-tag:         hsl(250deg 60% 96%);
  --c-bg-tag-active:  hsl(250deg 20% 90%);
  --c-bg-tag-checked: hsl(150deg 70% 85%);
}

/* Global */

:root {
  /* Typography */

  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Segoe UI', Verdana, sans-serif;
  font-size: 18px;
  @media (max-width: $breakpoint-sm) {font-size: initial}

  /* Colors */

  @extend .bg, .fg;

  /* Vars */

  @extend %vars-misc;
  @extend %vars-brand-colors;

  // This must use `include` and not `extend`, in this specific order,
  // otherwise the generated CSS will have the wrong precedence order.
  @include color-scheme-dark;
  @media (prefers-color-scheme: light) {@include color-scheme-light}

  /* Misc */

  // Personally I hate and despise UI animations, but most people seem to love
  // them. In the browsers I've tested, this property seems to respect OS-level
  // setting to disable smooth scrolling or minimize UI animations (sometimes
  // called "motions"). As a result, for users who tend to minimize animations,
  // this has no effect. For other users, this typically affects mousewheel
  // scroll, programmatic scroll, and scroll resulting from hash-links. This
  // has no effect on touch-scroll, which is always "smooth".
  scroll-behavior: smooth;
}

body {
  overflow-x: auto;
  overflow-y: scroll;
  min-height: 100vh;
  @extend .wid-lim, .flex, .col, .gap-ver-1;
}

code, key, pre {@extend .code}

/* Mixins */

@mixin aria-checked {
  // Causes precedence issues.
  // It's better to avoid `[aria-checked=false]` in markup.
  //
  // &[aria-checked]:not([aria-checked=false]) {@content}

  &[aria-checked] {@content}
}

@mixin shad($wid, $col) {box-shadow: 0 0 0 $wid $col}

/*
TODO consider moving to `sb`.

Note: we're not using the `underline` property shorthand because it's not fully
supported in Safari/iOS at the time of writing.
*/
@mixin underline($style, $wid: 1px) {
  text-decoration-line: underline;
  text-decoration-style: $style;
  text-decoration-thickness: $wid;
  text-underline-offset: calc(1ex / 2);
}

/* Themes */

.color-scheme-dark {@include color-scheme-dark}
.color-scheme-light {@include color-scheme-light}

.theme-red {@extend .bg-red, .fg-white}

.bg           {background-color: var(--c-bg)}
.bg-gray-far  {background-color: var(--c-bg-far)}
.bg-gray-near {background-color: var(--c-bg-near)}
.bg-code      {background-color: var(--c-code-bg)}
.bg-red       {background-color: var(--c-red)}
.bg-blue      {background-color: var(--c-blue)}

.fg           {color: var(--c-fg)}
.fg-white     {color: white}
.fg-gray-far  {color: var(--c-fg-far)}
.fg-gray-near {color: var(--c-fg-near)}
.fg-red       {color: var(--c-red)}
.fg-blue      {color: var(--c-blue)}

.fg-link {
  color: var(--c-link);
  &:visited {color: var(--c-link-visited)}
}

.fill-fg           {fill: var(--c-fg)}
.fill-gray-fg-near {fill: var(--c-fg-near)}

.stroke-fg {stroke: var(--c-fg)}

.fg-facebook {color: var(--c-facebook)}
.fg-github   {color: var(--c-github)}
.fg-linkedin {color: var(--c-linkedin)}
.fg-skype    {color: var(--c-skype)}
.fg-twitter  {color: var(--c-twitter)}
.fg-feedly   {color: var(--c-feedly)}
.fg-rss      {color: var(--c-rss)}
.fg-feedly   {color: var(--c-feedly)}
.fg-youtube  {color: var(--c-youtube)}

.fill-facebook {fill: var(--c-facebook)}
.fill-github   {fill: var(--c-github)}
.fill-linkedin {fill: var(--c-linkedin)}
.fill-skype    {fill: var(--c-skype)}
.fill-twitter  {fill: var(--c-twitter)}
.fill-feedly   {fill: var(--c-feedly)}
.fill-rss      {fill: var(--c-rss)}
.fill-feedly   {fill: var(--c-feedly)}
.fill-youtube  {fill: var(--c-youtube)}
.fill-discord  {fill: var(--c-discord)}

.hr {color: var(--c-hr)} // TODO consolidate with default border color.

// Lexicon: "plain" in theme names means "like plain text until interation".
// TODO better naming.
.theme-plain-bg-gray {
  &:hover {@extend .bg-gray-near}
}

.theme-bg-gray {
  @extend .fg;
  color: var(--c-fg-tag);
  background-color: var(--c-bg-tag);
  &.--busy {&:hover {background-color: var(--c-bg-tag-active)}}
}

// TODO better colors.
// TODO better name.
// Note: box-shadow should be compatible with default focus outlines.
.theme-tag-like {
  @extend .theme-bg-gray;

  &.--busy {
    @include aria-checked {
      background-color: var(--c-bg-tag-checked);
      @include shad(1px, var(--c-fg-far));
    }
    &:active {@include shad(3px, var(--c-fg-far))}
  }
}

/* Typography */

// Override.
.wei-bold {@extend .wei-semi}

.size-small  {font-size: 0.8rem}
.size-normal {font-size: 1rem}
.size-large  {font-size: 1.4rem}
.size-giant  {font-size: 2rem}

.font-monospace {font-family: SF Mono, Menlo, Monaco, DejaVu Sans Mono, Consolas, monospace}

/* Layout */

.stretch-to-viewport {
  min-height: 100vh;
  @extend .flex;
  @extend .col-sta-str;
}

.wid-lim {
  width: 100%;
  @extend .mar-cen;
  max-width: var(--max-page-width);
}

/* Whitespace */

.pad-tiny {padding: 0.3rem}
.gap-tiny {@include sb.gap(0.3rem)}
.gap-hor-tiny {@include sb.gap-hor(0.3rem)}
.gap-ver-tiny {@include sb.gap-ver(0.3rem)}

/* Misc */

.pad-body {padding: $pad-body}
.pad-rig-body {padding-right: $pad-body}
.pad-bot-body {padding-bottom: $pad-body}
.pad-lef-body {padding-left: $pad-body}
.pad-hor-body {@include sb.pad-hor($pad-body)}

.header {@extend .flex, .row-sta-str, .mar-bot-1, .gap-hor-1}
.main {@extend .pad-hor-body}
.footer {@extend .mar-top-auto, .pad-top-1, .flex, .row-bet-cen}

.header-link {
  @extend .size-large, .flex, .row-cen-cen, .fg-link, .pad-body;

  &.--busy {
    @extend .theme-plain-bg-gray;
    &[aria-current=true], &[aria-current=page] {
      box-shadow: inset 0 calc(-1 * var(--thick-border-width)) 0 0;
    }
  }
}

.header-update {
  @extend .fg-blue, .flex, .row-cen-cen, .pad-body, .sm-hide;

  &[aria-label] {
    @extend .help;

    // Similar to `@extend .tooltip-bot, .tooltip-rig`, but with the appropriate
    // horizontal position to match the header padding. A "cleaner" solution
    // would be to position the tooltip relative to the inner box (text box,
    // excluding the padding) of the parent, but there's no CSS support for
    // that.
    &:hover::after {
      bottom: unset;
      top: 100%;
      left: unset;
      right: $pad-body;
    }
  }
}

.underline-busy {
  @include underline(dashed);
  text-underline-offset: calc(1ex / 2);
  &:hover {text-decoration-style: solid}
}

.link-deco[href] {@extend .fg-link, .underline-busy}

.hash-prefix {opacity: 0.5}

.typography {
  h1 {font-size: var(--font-size-h1)}
  h2 {font-size: var(--font-size-h2)}
  h3 {font-size: var(--font-size-h3)}
  h1, h2, h3, h4, h5, h6 {@extend .target-flash}
  p, ul, ol {@extend .line-comfy}
  hr:not(.--gap-none) {@extend .hr}
  a {@extend .link-deco}
  pre {@extend .pad-1}
}

// Variant of `typography` intended for articles, with support for vertical
// spacing.
.article {
  @extend .typography, %article-spacing, %article-headings;

  // Required for floating images.
  @extend .block;

  // Suspicious, questionable.
  .details summary ~ pre {margin-top: 0}
}

// TODO better name.
%article-spacing {
  // Required for collapsing vertical margins.
  @extend .block;

  > :not(:last-child) {@extend .mar-bot-1}

  > h1, > h2, > h3, > h4, > h5, > h6 {
    &:not(:first-child) {@extend .mar-top-2}
    @extend .mar-bot-1;
  }

  ul, ol {li {@extend .mar-top-0x5}}

  > hr:not(.--gap-none) {@extend .mar-ver-2}
}

%article-headings {
  .heading-prefix {display: none}

  // TODO: this must use a breakpoint slightly wider than `--max-page-width`,
  // by about the width expected of header prefixes.
  @media (min-width: $breakpoint-lg + 1px) {
    h1, h2, h3, h4, h5, h6 {position: relative}

    .heading-prefix {
      position: absolute;
      display: inline;
      right: calc(100% + 1ch);
      color: var(--c-fg-near);
    }

    h1 > .heading-prefix::before {content: '# '}
    h2 > .heading-prefix::before {content: '## '}
    h3 > .heading-prefix::before {content: '### '}
    h4 > .heading-prefix::before {content: '#### '}
    h5 > .heading-prefix::before {content: '##### '}
    h6 > .heading-prefix::before {content: '###### '}
  }
}

.details {
  @extend %bord-details;
  &[open] {@extend %bord-details-open}
  > * {@extend .pad-hor-1}
  > :first-child {@extend .pad-top-1}
  > :last-child {@extend .pad-bot-1}
}

// Color needs to be consistent with `.summary`.
%bord-details {border: 1px solid var(--c-bg-tag)}
%bord-details-open {border: 1px solid var(--c-bg-tag-active)}

.details-spaced[open] {@extend %article-spacing}

/*
Incomplete. Requires additional indications of interactivity before this can be
usable.
*/
.summary-text {
  &::marker {@extend .fg-link}
}

// Needs a better interactive theme.
// Color needs to be consistent with `.details`.
.summary {
  @extend .summary-text, .cur-point, .pad-1;
  @extend .theme-bg-gray, .--busy;
}

.table {
  $bord: 1px dashed var(--c-fg-far);

  @extend .table-fix;
  border-collapse: collapse;

  &, thead, tbody, tr {max-width: 100%}
  thead, tr:not(:last-of-type) {border-bottom: $bord}
  thead {@extend .bold, .bg-gray-near}

  th, td {
    @extend .pad-0x5;
    &:not(:first-of-type) {border-left: $bord}
  }
}

.blockquote {
  @extend .bg-code, %article-spacing;

  padding: 1rem 1rem 1rem calc(1rem + var(--thick-border-width));
  border-left: var(--thick-border-width) solid var(--c-fg-near);

  // Tentative. Prevents the background from overlapping with floating images.
  clear: both;

  footer {
    @extend .block, .text-rig;

    // Note: MacOS VoiceOver seems to read this emdash as "comma". WTF?
    &::before {
      content: '—'; // emdash
      margin-right: 0.5em; // TODO use letter spacing.
    }
  }
}

[disabled] {@extend .cur-not}

// Motivation: pseudoelements are ignored when copy-pasting or printing.
// This should be used for cosmetic text.
[data-note]::before {content: attr(data-note)}

@media print {.noprint:not(:root) {display: none}}

.svg-icon {
  width: 1em;
  height: 1em;
  @extend .flex-noshrink;

  // Seems unnecessary.
  //
  // vertical-align: -0.1em;
  // vertical-align: text-top;
  // vertical-align: middle;
}

.sm-hide {@media (max-width: $breakpoint-sm) {display: none}}
.non-sm-hide {@media (min-width: $breakpoint-sm) {display: none}}

.heading-anchor {
  /*
  Note: we use opacity because "display: none" or "visibility: hidden" would
  prevent the anchor from receiving focus on tab-navigation.
  */
  opacity: 0;
  &:focus, &:hover, h1:hover &, h2:hover &, h3:hover &, h4:hover &, h5:hover &, h6:hover & {
    opacity: 1;
  }

  /*
  Note: putting the link symbol into a pseudoelement prevents it from getting
  unnecessarily included into RSS article content, various reader modes,
  printed content, etc.

  Note: this doesn't cause screen readers to ignore the link. To omit it from
  screen reader navigation and voiceover, use [aria-hidden="true"]. Note that
  [aria-hidden=""] does not work.
  */
  &::after {
    content: '🔗';
    font-size: 1rem;
    margin-left: 0.5rem;
  }
}

// // Unused, TODO use or remove.
// .skip-to-content {
//   position: fixed;
//   top: 0;
//   left: 0;
//   @extend .bg-gray-near;
//
//   // This visually hides the element while allowing it to receive focus.
//   // `display: none` or `visibility: hidden` would have prevented focus.
//   padding: 0;
//   width: 1px;
//   height: 1px;
//   opacity: 0;
//   overflow: hidden;
//
//   &:focus {
//     @extend .pad-1;
//     width: initial;
//     height: initial;
//     opacity: initial;
//     overflow: initial;
//   }
// }

.rounded {border-radius: var(--border-radius)}

.abs-fit-top {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
}

.bord     {border: $bord}
.bord-top {border-top: $bord}
.bord-rig {border-right: $bord}
.bord-bot {border-bottom: $bord}
.bord-lef {border-left: $bord}

/*
Small image box positioned to the right. TODO variants: left-sided; centered
large.
*/
.img-box {
  @extend .block, .bord;
  float: right;
  clear: both;
  position: relative;

  // Flexible sizing proportional to display width.
  width: 30vw;
  min-width: 6em;
  max-width: 10em;
  height: auto;

  margin: 0 0 1em 1em;

  // Tentative.
  // @extend .rounded;

  // On extra-small displays, break the text instead of floating.
  @media (max-width: $breakpoint-xs) {
    float: unset;
    width: 100%;
    min-width: unset;
    max-width: unset;
    margin: 1em 0 1em 0;
  }
}

.img-box-link {
  @extend .block;
  border-radius: inherit;

  // TODO: choose visual effect.
  &[href]:hover {}
}

/*
Note: dimensions must be set in the markup. We scan width/height from image
file metadata to set `aspect-ratio` for each `img`.
*/
.img-box-img {
  @extend .block;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}

.img-box-caption {
  @extend .block;
  @include sb.pad-hor(0.5rem);
  @include sb.pad-ver(0.25rem);
  @extend .text-cen;
  border-top: 1px solid var(--c-fg-far);
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
}

.code {
  @extend .bg-code;
  @extend .font-monospace;
}

.target-flash:target {
  animation-name: flash;
  animation-duration: 1s;
}

@keyframes flash {
  0% {}
  20% {background-color: var(--c-bg-far)}
  100% {}
}

.line-1 {line-height: 1}
.line-comfy {line-height: 1.4}

// TODO better name.
.tag-like {
  @extend .wspace-pre, .line-1, .pad-tiny, .cur-auto, .theme-tag-like;
  line-height: 1;
  &.--busy {@extend .cur-point}
}

// TODO better name.
.tag-likes {@extend .flex, .row, .wrap, .gap-tiny}

.tag {
  @extend .tag-like;

  // TODO consider making this part of the content for copy/paste compat.
  &::before {
    content: '#';
    @extend .fg-gray-near;
  }
}

.time-sink {
  @extend .tag-like;

  &.--safe {
    @extend .fg-blue;
    // TODO consider making this part of the content for copy/paste compat.
    &::before {content: '⏳'}
  }

  &.--danger {
    @extend .fg-red;
    // TODO consider making this part of the content for copy/paste compat.
    &::before {content: '⌛️'}
  }
}

.aspect-common {aspect-ratio: 16/9}

.aspect-steam-img {aspect-ratio: 16/7}

.img-preview {@extend .flex, .obj-cov, .aspect-common}

.game-grid {
  // https://developer.mozilla.org/en-US/docs/Web/CSS/grid
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(16rem, 100%), 1fr));
  gap: 1rem;
}

.game-grid-item {@extend .flex, .col, .gap-0x5}

.game-grid-item-img {
  @extend .wid-100p, .obj-cov, .aspect-steam-img, .pad-0;

  // This ensures that all images have a distinctive box regardless of contrast
  // (or lack thereof) between the page background and the image, or when they
  // fail to load. This helps to differentiate grid items from each other.
  @extend .bord;
}

.filter-placeholder {
  @extend .flex, .row-cen-cen, .fg-gray-near;
  grid-column: 1/-1;
}

.help[aria-label] {
  @extend .cur-help;
  @include underline(dotted);
}

[aria-label]:hover {
  @extend .rel;

  &::after {
    @extend .abs, .wspace-pre, .line-1, .pad-tiny;
    content: attr(aria-label);
    color: var(--c-bg);
    background-color: var(--c-fg);
    // Note: changing this to `inherit` breaks `.help`.
    text-decoration: unset;
  }

  &::after {bottom: 100%; left: 0}
  &.tooltip-rig::after {left: unset; right: 0}
  &.tooltip-bot::after {bottom: unset; top: 100%}
}

.post-previews {@extend .flex, .col, .gap-2, .typography}
.post-preview {@extend .article}
.feed-links {@extend .inl-flex, .row-sta-sta, .gap-hor-0x5}
