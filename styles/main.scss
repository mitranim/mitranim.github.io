@use 'sb/reset';
@use 'sb/sb';

@include sb.all;

/* Vars */

// Note: CSS variables can't be used for media queries.
$breakpoint-xs: 320px;
$breakpoint-sm: 640px;
$breakpoint-lg: 1024px;
$bord: 1px solid var(--c-bord);
$pad-body: 1rem;

%vars-misc {
  --max-page-width:     #{$breakpoint-lg};
  --thick-border-width: 3px;
  --img-box-size:       10em;
  --img-box-size-small: 6em;
  --c-bord:             var(--c-fg-far);
}

// Source: https://brandcolors.net.
%vars-brand-colors {
  --c-skype:    #00aff0;
  --c-github:   #4183c4;
  --c-youtube:  #ff0000;
  --c-twitter:  #55acee;
  --c-linkedin: #0976b4;
  --c-facebook: #3b5998;
  --c-feedly:   #2bb24c;
  --c-discord:  #7289da;
  --c-rss:      #f26522;
}

// Defined as mixin rather than class for compatibility with `@media`.
@mixin color-scheme-dark {
  --c-bg:             hsl(200deg 5% 10%);
  --c-fg:             hsl(0deg 0% 90%);
  --c-bg-far:         darkslategray;
  --c-bg-near:        hsl(0deg 0% 15%);
  --c-fg-far:         hsl(0deg 0% 40%);
  --c-fg-near:        hsl(0deg 0% 70%);
  --c-red:            hsl(0deg 70% 50%);
  --c-blue:           hsl(207deg 100% 70%);
  --c-link:           hsl(230deg 70% 80%);
  --c-link-visited:   hsl(260deg 45% 65%);
  --c-code-bg:        hsl(70deg 8% 15%); // Same as chroma's Monokai background
  --c-hr:             hsl(0deg 0% 63%);
  --c-bg-tag:         hsl(220deg 20% 20%);
  --c-bg-tag-active:  hsl(220deg 30% 25%);
  --c-bg-tag-checked: hsl(150deg 30% 25%);
}

// Defined as mixin rather than class for compatibility with `@media`.
@mixin color-scheme-light {
  --c-bg:             white;
  --c-fg:             black;
  --c-bg-far:         hsl(0deg 0% 46%);
  --c-bg-near:        aliceblue;
  --c-fg-far:         hsl(0deg 0% 70%);
  --c-fg-near:        hsl(0deg 0% 40%);
  --c-red:            hsl(0deg 100% 60%);
  --c-blue:           hsl(207deg 100% 42%);
  --c-link:           hsl(231deg 40% 40%);
  --c-link-visited:   hsl(260deg 60% 25%);
  --c-code-bg:        hsl(60deg 33% 97%);
  --c-hr:             hsl(0deg 0% 63%);
  --c-bg-tag:         hsl(250deg 60% 96%);
  --c-bg-tag-active:  hsl(250deg 20% 90%);
  --c-bg-tag-checked: hsl(150deg 70% 85%);
}

/* Global */

:root {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Segoe UI', Verdana, sans-serif;
  font-size: clamp(1rem, 18px, 2rem);
  @media (max-width: $breakpoint-sm) {font-size: initial}
}

/*
This must use `include` and not `extend`, in this specific order,
otherwise the generated CSS will have the wrong precedence order.
*/
:root {@include color-scheme-dark}
@media (prefers-color-scheme: light) {:root {@include color-scheme-light}}

:root {
  @extend %vars-misc;
  @extend %vars-brand-colors;
  @extend .bg, .fg;
}

/*
Personally I hate UI animations as time-wasters, but most people seem to love
them. In the browsers I've tested, this property seems to respect the OS-level
setting to disable smooth scrolling or minimize UI animations, often called
"reduce motion" or similar. As a result, for users who tend to minimize
animations, this has no effect. For other users, this typically affects
mousewheel scroll, programmatic scroll, and scroll resulting from hash-links.
This has no effect on touch-scroll, which is always "smooth".
*/
:root {scroll-behavior: smooth}

body {
  overflow-x: auto;
  overflow-y: scroll;
  min-height: 100vh;
  @extend .wid-lim, .flex, .col, .gap-ver-1;
}

code, key, pre {@extend .code}

/* Mixins */

@mixin shad($wid, $col) {box-shadow: 0 0 0 $wid $col}

/*
TODO consider moving to `sb`.

Note: we're not using the `underline` property shorthand because it's not fully
supported in Safari/iOS at the time of writing.
*/
@mixin underline($style, $wid: 1px) {
  text-decoration-line: underline;
  text-decoration-style: $style;
  text-decoration-thickness: $wid;
  text-underline-offset: calc(1ex / 2);
}

/* Themes */

.color-scheme-dark {@include color-scheme-dark}
.color-scheme-light {@include color-scheme-light}

.theme-red {@extend .bg-red, .fg-white}

.bg           {background-color: var(--c-bg)}
.bg-gray-far  {background-color: var(--c-bg-far)}
.bg-gray-near {background-color: var(--c-bg-near)}
.bg-code      {background-color: var(--c-code-bg)}
.bg-red       {background-color: var(--c-red)}
.bg-blue      {background-color: var(--c-blue)}

.fg           {color: var(--c-fg)}
.fg-white     {color: white}
.fg-gray-far  {color: var(--c-fg-far)}
.fg-gray-near {color: var(--c-fg-near)}
.fg-red       {color: var(--c-red)}
.fg-blue      {color: var(--c-blue)}

.fg-link {
  color: var(--c-link);
  &:visited {color: var(--c-link-visited)}
}

.fill-fg           {fill: var(--c-fg)}
.fill-gray-fg-near {fill: var(--c-fg-near)}

.stroke-fg {stroke: var(--c-fg)}

.fg-facebook {color: var(--c-facebook)}
.fg-github   {color: var(--c-github)}
.fg-linkedin {color: var(--c-linkedin)}
.fg-skype    {color: var(--c-skype)}
.fg-twitter  {color: var(--c-twitter)}
.fg-feedly   {color: var(--c-feedly)}
.fg-rss      {color: var(--c-rss)}
.fg-feedly   {color: var(--c-feedly)}
.fg-youtube  {color: var(--c-youtube)}

.fill-facebook {fill: var(--c-facebook)}
.fill-github   {fill: var(--c-github)}
.fill-linkedin {fill: var(--c-linkedin)}
.fill-skype    {fill: var(--c-skype)}
.fill-twitter  {fill: var(--c-twitter)}
.fill-feedly   {fill: var(--c-feedly)}
.fill-rss      {fill: var(--c-rss)}
.fill-feedly   {fill: var(--c-feedly)}
.fill-youtube  {fill: var(--c-youtube)}
.fill-discord  {fill: var(--c-discord)}

.hr {color: var(--c-hr)} // TODO consolidate with default border color.

.busy-gray-bg {&:hover {@extend .bg-gray-near}}

.theme-bg-gray {
  @extend .fg;
  color: var(--c-fg);
  background-color: var(--c-bg-tag);

  &.--busy {
    &:hover, &:focus {background-color: var(--c-bg-tag-active)}
    &:active {@include shad(3px, var(--c-fg-far))}
  }
}

// TODO better colors.
// TODO better name.
// Note: box-shadow should be compatible with default focus outlines.
.theme-tag-like {
  &:hover, &:focus {background-color: var(--c-bg-tag)}
  &[aria-checked] {
    background-color: var(--c-bg-tag-checked);
    @include shad(1px, var(--c-fg-far));
  }
  &:active {@include shad(3px, var(--c-fg-far))}
}

/* Typography */

// Override.
.wei-bold {@extend .wei-semi}

.size-small  {font-size: 0.8rem}
.size-normal {font-size: 1rem}
.size-large  {font-size: 1.4rem}
.size-giant  {font-size: 2rem}

.font-monospace {font-family: SF Mono, Menlo, Monaco, DejaVu Sans Mono, Consolas, monospace}

/* Layout */

.stretch-to-viewport {
  min-height: 100vh;
  @extend .flex, .col-sta-str;
}

.wid-lim {
  width: 100%;
  @extend .mar-cen;
  max-width: var(--max-page-width);
}

/* Whitespace */

.pad-tiny {padding: 0.3rem}
.gap-tiny {gap: 0.3rem}
.gap-hor-tiny {column-gap: 0.3rem}
.gap-ver-tiny {row-gap: 0.3rem}

/* Misc */

.pad-body {padding: $pad-body}
.pad-rig-body {padding-right: $pad-body}
.pad-bot-body {padding-bottom: $pad-body}
.pad-lef-body {padding-left: $pad-body}
.pad-hor-body {@include sb.pad-hor($pad-body)}

.header {@extend .flex, .row-sta-str, .mar-bot-1, .gap-hor-1}
.main {@extend .pad-hor-body}
.footer {@extend .mar-top-auto, .pad-top-1, .flex, .row-bet-cen}

.header-link {
  @extend .size-large, .flex, .row-cen-cen, .fg-link, .pad-body;

  &.--busy {
    @extend .busy-gray-bg;
    &[aria-current=true], &[aria-current=page] {
      box-shadow: inset 0 calc(-1 * var(--thick-border-width)) 0 0;
    }
  }
}

.header-update {
  @extend .flex, .row-cen-cen, .pad-body, .sm-hide;

  &[aria-label] {
    @extend .help;

    // Similar to `@extend .tooltip-bot, .tooltip-rig`, but with the appropriate
    // horizontal position to match the header padding. A "cleaner" solution
    // would be to position the tooltip relative to the inner box (text box,
    // excluding the padding) of the parent, but there's no CSS support for
    // that.
    &:hover::after {
      bottom: unset;
      top: 100%;
      left: unset;
      right: $pad-body;
    }
  }
}

.underline-busy {
  @include underline(dashed);
  text-underline-offset: calc(1ex / 2);
  &:hover {text-decoration-style: solid}
}

.link-deco[href] {@extend .fg-link, .underline-busy}

/*
.link-ext::after {
  @extend .inl-block, .bg-cov;
  content: '';
  margin-left: 0.3ch;
  width: 1.5ex;
  height: 1.5ex;
  color: inherit;

  // Known issue: doesn't inherit color. TODO remove.
  background-image: url(
    'data:image/svg+xml;utf8,' +
    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: none; stroke: var(--c-link)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">' +
      '<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />' +
      '<polyline points="15 3 21 3 21 9" />' +
      '<line x1="10" y1="14" x2="21" y2="3" />' +
    '</svg>'
  );
}
*/

.hash-prefix {opacity: 0.5}

/*
Purpose: nice typographic styling for content generated from Markdown. Mostly
intended for posts / articles. Should support all common HTML tags generated by
Markdown renderers.
*/
.typography {
  h1 {font-size: 1.6rem}
  h2 {font-size: 1.4rem}
  h3 {font-size: 1.2rem}
  h1, h2, h3, h4, h5, h6 {@extend .target-flash}
  p, ul, ol {@extend .line-comfy}
  hr:not(.--gap-none) {@extend .hr}
  a {@extend .link-deco}
  pre {@extend .pad-1}
}

// Variant of `typography` intended for articles, with support for vertical
// spacing.
.article {
  @extend .typography, %article-spacing;

  // Required for floating images.
  display: block;
}

// TODO better name.
%article-spacing {
  // Required for collapsing vertical margins.
  display: block;

  > * {@extend .mar-top-1}
  > :where(h1, h2, h3, h4, h5, h6) {@extend .mar-top-2}
  :where(ul, ol) > :nth-child(n+2) {@extend .mar-top-0x5}
  li > * {@extend .mar-top-0x5}
  > hr:not(.--gap-none) {@extend .mar-ver-2}
  > :first-child {@extend .mar-top-0}
}

// TODO: this must use a breakpoint slightly wider than `--max-page-width`,
// by about the width expected of header prefixes.
@media (min-width: $breakpoint-lg + 1px) {
  :where(h1, h2, h3, h4, h5, h6).heading-prefix {
    position: relative;

    &::before {
      position: absolute;
      display: inline;
      right: calc(100% + 1ch);
      color: var(--c-fg-near);
    }

    &:where(h1)::before {content: '# '}
    &:where(h2)::before {content: '## '}
    &:where(h3)::before {content: '### '}
    &:where(h4)::before {content: '#### '}
    &:where(h5)::before {content: '##### '}
    &:where(h6)::before {content: '###### '}
  }
}

// Color needs to be consistent with `.summary`.
%bord-details {border: 1px solid var(--c-bg-tag)}
%bord-details-open {border: 1px solid var(--c-bg-tag-active)}

.details {
  @extend %bord-details;
  &[open] {@extend %bord-details-open}

  /*
  Pad the summary to increase the click target. Pad the other children to make
  their spacing consistent with the summary. We pad every child in all
  directions to ensure that when there are multiple inner children with their
  own backgrounds and/or borders, meaning their geometry is visibly indicated,
  this doesn't make their geometry inconsistent.
  */
  > * {padding: 0 1rem 0 1rem}
  > :last-child {padding-bottom: 1rem}
  > summary {
    @extend %summary-marker, .cur-point;
    @extend .theme-bg-gray, .--busy;
    padding: 1rem;
  }
}

.details-spaced[open] {@extend %article-spacing}

%summary-marker::marker {@extend .fg-link}

.summary-text {@extend %summary-marker, .underline-busy}

.table {
  $bord: 1px dashed var(--c-fg-far);

  @extend .table-fix;
  border-collapse: collapse;

  &, thead, tbody, tr {max-width: 100%}
  thead, tr:not(:last-of-type) {border-bottom: $bord}
  thead {@extend .bold, .bg-gray-near}

  th, td {
    @extend .pad-0x5;
    &:not(:first-of-type) {border-left: $bord}
  }
}

.blockquote {
  @extend .bg-code, %article-spacing;

  padding: 1rem 1rem 1rem calc(1rem + var(--thick-border-width));
  border-left: var(--thick-border-width) solid var(--c-fg-near);

  // Tentative. Prevents the background from overlapping with floating images.
  clear: both;

  footer {
    display: block;
    text-align: right;

    // Note: MacOS VoiceOver seems to read this emdash as "comma". WTF?
    &::before {
      content: '—'; // emdash
      margin-right: 0.5em; // TODO use letter spacing.
    }
  }
}

[disabled] {@extend .cur-not}

// Motivation: pseudoelements are ignored when copy-pasting or printing.
// This should be used for cosmetic text.
[data-note]::before {content: attr(data-note)}

@media print {.noprint:not(:root) {display: none}}

.svg-icon {
  width: 1em;
  height: 1em;
  vertical-align: text-bottom;
  flex-shrink: 0;

  // Seems unnecessary.
  //
  // vertical-align: -0.1em;
  // vertical-align: text-top;
  // vertical-align: middle;
}

.sm-hide {@media (max-width: $breakpoint-sm) {display: none}}
.non-sm-hide {@media (min-width: $breakpoint-sm) {display: none}}

.heading-anchor {
  /*
  Note: we use opacity because "display: none" or "visibility: hidden" would
  prevent the anchor from receiving focus on tab-navigation.
  */
  opacity: 0;
  &:focus, &:hover, h1:hover &, h2:hover &, h3:hover &, h4:hover &, h5:hover &, h6:hover & {
    opacity: 1;
  }

  /*
  Note: putting the link symbol into a pseudoelement prevents it from getting
  unnecessarily included into RSS article content, various reader modes,
  printed content, etc.

  Note: this doesn't cause screen readers to ignore the link. To omit it from
  screen reader navigation and voiceover, use [aria-hidden="true"]. Note that
  [aria-hidden=""] does not work.
  */
  &::after {
    content: '🔗';
    font-size: 1rem;
    margin-left: 0.5rem;
  }
}

// // Unused, TODO use or remove.
// .skip-to-content {
//   position: fixed;
//   top: 0;
//   left: 0;
//   @extend .bg-gray-near;
//
//   // This visually hides the element while allowing it to receive focus.
//   // `display: none` or `visibility: hidden` would have prevented focus.
//   padding: 0;
//   width: 1px;
//   height: 1px;
//   opacity: 0;
//   overflow: hidden;
//
//   &:focus {
//     @extend .pad-1;
//     width: initial;
//     height: initial;
//     opacity: initial;
//     overflow: initial;
//   }
// }

// --border-radius: 4px;
// .rounded {border-radius: var(--border-radius)}

.abs-fit-top {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
}

.bord     {border: $bord}
.bord-top {border-top: $bord}
.bord-rig {border-right: $bord}
.bord-bot {border-bottom: $bord}
.bord-lef {border-left: $bord}

/*
Small image box positioned to the right. This class can be used either directly
for `<img>`, or for another element that contains an image with a caption.

TODO variants: left-sided; centered large.
*/
.img-box {
  display: block;
  float: right;
  clear: both;
  // Space away from flow content on the left and bottom.
  margin: 0 0 1em 1em;

  // On extra-small displays, break the text instead of floating.
  @media (max-width: $breakpoint-xs) {
    float: unset;
    width: 100%;
    min-width: unset;
    max-width: unset;
    margin: 1em 0 1em 0;
  }

  & {
    // Flexible sizing proportional to display width.
    width: 30vw;
    min-width: 6em;
    max-width: 10em;
    height: auto;

    @extend .bord;

    // Tentative.
    // @extend .rounded;
  }
}

.img-box-link {
  display: block;
  border-radius: inherit;

  // TODO: choose visual effect.
  &[href]:hover {}
}

/*
Note: dimensions must be set in the markup. We scan width/height from image
file metadata to set `aspect-ratio` for each `img`.
*/
.img-box-img {
  display: block;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}

.img-box-caption {
  @include sb.pad-hor(0.5rem);
  @include sb.pad-ver(0.25rem);
  display: block;
  text-align: center;
  border-top: 1px solid var(--c-fg-far);
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
}

.code {@extend .bg-code, .font-monospace;}

.target-flash:target {
  animation-name: flash;
  animation-duration: 1s;
}

@keyframes flash {
  0% {}
  20% {background-color: var(--c-bg-far)}
  100% {}
}

.line-1 {line-height: 1}
.line-comfy {line-height: 1.4}
%cen {@extend .flex, .row-cen-cen, .line-1}

// TODO better name.
.tag-like {
  @extend %cen, .wspace-pre, .pad-tiny, .cur-auto, .theme-tag-like;
  &.--busy {@extend .cur-point}
  > :first-child {@extend %cen, .fg-gray-far}
}

// TODO better name.
.tag-likes {@extend .flex, .row-sta-cen, .wrap, .gap-tiny}

.aspect-common {aspect-ratio: 16/9}

.aspect-steam-img {aspect-ratio: 16/7}

.img-preview {@extend .flex, .obj-cov, .aspect-common}

.game-grid {
  // https://developer.mozilla.org/en-US/docs/Web/CSS/grid
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(16rem, 100%), 1fr));
  gap: 1rem;
}

.game-grid-item {@extend .flex, .col, .gap-0x5}

.game-grid-item-img {
  @extend .wid-100p, .obj-cov, .aspect-steam-img, .pad-0;

  // This ensures that all images have a distinctive box regardless of contrast
  // (or lack thereof) between the page background and the image, or when they
  // fail to load. This helps to differentiate grid items from each other.
  @extend .bord;
}

.filter-placeholder {
  @extend .flex, .row-cen-cen, .fg-gray-near;
  grid-column: 1/-1;
}

.help[aria-label] {
  @extend .cur-help;
  @include underline(dotted);
}

[aria-label]:hover {
  @extend .rel;

  &::after {
    @extend .abs, .wspace-pre, .line-1, .pad-tiny;
    content: attr(aria-label);
    color: var(--c-bg);
    background-color: var(--c-fg);
    // Note: changing this to `inherit` breaks `.help`.
    text-decoration: unset;
  }

  &::after {bottom: 100%; left: 0}
  &.tooltip-rig::after {left: unset; right: 0}
  &.tooltip-bot::after {bottom: unset; top: 100%}
}

.post-previews {@extend .flex, .col, .gap-2, .typography}
.post-preview {@extend .typography}
.post-preview h2 + * {@extend .mar-top-1}
.post-time {@extend .size-small, .fg-gray-near}
.post-desc + .post-time {@extend .mar-top-0}
.feed-links {@extend .inl-flex, .row-sta-sta, .gap-hor-0x5}
